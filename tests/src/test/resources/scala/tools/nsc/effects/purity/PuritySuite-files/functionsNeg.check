newSource:17: error: effect type mismatch;
 found   : @mod() @loc(d)
 required: @mod(anon) @assign(anon,any) @loc(anon)
@loc(d) does not conform to @loc(anon)
    anon.appliquer()
                  ^
newSource:21: error: effect type mismatch;
 found   : @mod() @loc(d)
 required: @mod() @loc()
@loc(d) does not conform to @loc()
      def appliquer(): E @loc() = d.y
                                    ^
newSource:28: error: effect type mismatch;
 found   : @mod() @loc(d)
 required: @mod(fun) @assign(fun,any) @loc(fun)
@loc(d) does not conform to @loc(fun)
    fun()
       ^
newSource:32: error: type mismatch;
 found   : () => C.this.E{def apply(): C.this.E @scala.annotation.effects.mod @scala.annotation.effects.loc(d)}
 required: () => C.this.E{def apply(): C.this.E @scala.annotation.effects.loc}
    val fun: (() => E) { def apply(): E @loc() } = () => d.y
                                                      ^
newSource:39: error: type mismatch;
 found   : () => Unit{def apply(): Unit @scala.annotation.effects.mod @scala.annotation.effects.assign(da, d, da)}
 required: () => C.this.E{def apply(): C.this.E @scala.annotation.effects.loc}
    val fun: (() => E) { def apply(): E @loc() } = () => {
                                                      ^
newSource:44: error: effect type mismatch;
 found   : @mod() @loc(d)
 required: @mod() @loc()
@loc(d) does not conform to @loc()
    da.y
       ^
